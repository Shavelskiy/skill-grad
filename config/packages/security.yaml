security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    users_in_memory: { memory: null }
    users:
      entity:
        class: App\Entity\User
        property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      pattern: ^/
      anonymous: lazy
      provider: users_in_memory
      guard:
        authenticators:
          - App\Security\AppAuthenticator
          - App\Security\SocServiceAuthenticator
          - App\Security\AdminAuthenticator
        entry_point: App\Security\AppAuthenticator
      logout:
        path: ajax.auth.logout
        success_handler: App\Security\LogoutSuccessHandler

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be usedfThere is no user provider for user "App\Entity\User". Shouldn't the "supportsClass()"
  access_control:
    - { path: ^/profile, roles: IS_AUTHENTICATED_FULLY }

  # - { path: ^/profile, roles: ROLE_USER }
  encoders:
    App\Entity\User:
      algorithm: bcrypt
